{"version":3,"sources":["components/ToDoItem.js","components/app.js","index.js"],"names":["ToDoItem","react_default","a","createElement","id","this","props","taskID","type","checked","status","onChange","handleBoxCheck","htmlFor","className","name","href","onClick","removeItem","React","Component","App","state","toDoItems","filteredItems","currentText","placeHolderText","searchString","listUpdate","_this","checkItem","find","item","checkIndex","indexOf","done","setState","dataToStorage","JSON","stringify","localStorage","setItem","removeItemID","filter","handleSearch","handleNewText","e","target","value","handleSubmitNew","preventDefault","length","newListItem","toUpperCase","Date","now","concat","handleSearchChange","currentSearch","newUserSearch","currentFilter","toLowerCase","includes","getItem","console","log","dataFromStorage","parse","_this2","src","alt","map","index","components_ToDoItem","key","onSubmit","placeholder","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.ee510b19.chunk.js","sourcesContent":["import React from \"react\"\n\nclass ToDoItem extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <input\n          id={this.props.taskID}\n          type=\"checkbox\"\n          checked={this.props.status}\n          onChange={this.props.handleBoxCheck} />\n        <label htmlFor={this.props.taskID} className={(this.props.status) ? \"list-section__item--checked\" : \"\"}>{this.props.name}</label>\n        <a href=\"#\" onClick={this.props.removeItem}> X</a>\n      </div>\n    )\n  }\n}\n\nexport default ToDoItem\n","import React from \"react\"\nimport ToDoItem from \"./ToDoItem\"\n\nclass App extends React.Component {\n\n  state = {\n    toDoItems: [],\n    filteredItems: [],\n    currentText: \"\",\n    placeHolderText: \"\",\n    searchString: \"\"\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"toDoList\")) {\n      console.log(\"found localStorage\")\n      const dataFromStorage = JSON.parse(localStorage.getItem(\"toDoList\"))\n      this.setState({\n        toDoItems: dataFromStorage,\n        filteredItems: dataFromStorage\n      })\n    } else {\n      console.log(\"nothing in localStorage\")\n    }\n  }\n\n  handleBoxCheck = (checked, taskID) => {\n    const listUpdate = this.state.toDoItems\n    const checkItem = listUpdate.find(item => (item.id === taskID))\n    const checkIndex = listUpdate.indexOf(checkItem)\n    listUpdate[checkIndex].done = !listUpdate[checkIndex].done\n    this.setState({\n      toDoItems: listUpdate\n    }, () => {\n      const dataToStorage = JSON.stringify(this.state.toDoItems)\n      localStorage.setItem(\"toDoList\", dataToStorage)\n    })\n  }\n\n  removeItem = (removeItemID) => {\n    const listUpdate = this.state.toDoItems\n      .filter(item => {\n        return item.id !== removeItemID\n      })\n    this.setState({\n      toDoItems: listUpdate\n    }, () => {\n      const dataToStorage = JSON.stringify(this.state.toDoItems)\n      localStorage.setItem(\"toDoList\", dataToStorage)\n      this.handleSearch(this.state.searchString)\n    })\n  }\n\n  handleNewText = e => this.setState({\n    currentText: e.target.value\n  })\n\n  handleSubmitNew = (e) => {\n    e.preventDefault()\n    if (!this.state.currentText.length) {\n      this.setState({ placeHolderText: \"Give your task a name\" })\n    } else {\n      const newListItem = {\n        name: this.state.currentText.toUpperCase(),\n        done: false,\n        id: Date.now()\n      }\n      this.setState({\n        toDoItems: this.state.toDoItems.concat(newListItem),\n        currentText: \"\",\n        placeHolderText: \"\"\n      }, () => {\n        const dataToStorage = JSON.stringify(this.state.toDoItems)\n        localStorage.setItem(\"toDoList\", dataToStorage)\n        this.handleSearch(this.state.searchString)\n      })\n    }\n  }\n  \n  handleSearchChange = (e) => {\n    const currentSearch = e.target.value\n    this.handleSearch(currentSearch)\n  }\n\n  handleSearch = (newUserSearch) => {\n    const currentSearch = newUserSearch\n    let currentFilter = []\n    if (currentSearch !== \"\") {\n      currentFilter = this.state.toDoItems.filter((item) => {\n        return item.name.toLowerCase().includes(currentSearch.toLowerCase())\n      })\n    } else {\n      currentFilter = this.state.toDoItems\n    }\n    this.setState({\n      filteredItems: currentFilter,\n      searchString: currentSearch\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"master-wrapper\">\n        <header className=\"header\">\n          <img className=\"header__image\" src=\"./pencillong.jpg\" alt=\"Pencil\" />\n        </header>\n\n        <section className=\"list-section\">\n          <div className=\"list-section__heading-container\">\n            <h1 className=\"list-section__heading\">TO DO LIST</h1>\n          </div>\n\n          {(!this.state.toDoItems.length) && <i>( CREATE A TASK )</i>}\n\n          {this.state.filteredItems.map((item, index) => {\n            return <ToDoItem\n              key={index}\n              taskID={item.id}\n              name={item.name}\n              status={item.done}\n              handleBoxCheck={() => this.handleBoxCheck(item.done, item.id)}\n              removeItem={() => this.removeItem(item.id)} />\n          })}\n\n          <form className=\"list-section__formField\" onSubmit={this.handleSubmitNew}>\n            <input\n              className=\"list-section__addField\"\n              type=\"text\"\n              value={this.state.currentText}\n              placeholder={this.state.placeHolderText}\n              onChange={this.handleNewText} />\n            <input className=\"list-section__addButton\" type=\"submit\" value=\"+\" />\n          </form>\n        </section>\n        <section className=\"search-section\">\n          <img className=\"searchicon\" src=\"./searchicon.png\" alt=\"search\" />\n          <input\n            type=\"text\"\n            className=\"searchBar\"\n            onChange={this.handleSearchChange}\n            value={this.state.searchString} />\n          <input type=\"button\" className=\"clearButton\" value=\"C\" onClick={() => this.handleSearch(\"\")} />\n        </section>\n      </div>\n    )\n  }\n\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/app\"\nimport \"./index.scss\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}